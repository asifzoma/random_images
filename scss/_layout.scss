// base container layout

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 10px clamp(2vw, calc(0.184rem + 2.851vw), 2.75rem); // padding for mobile and desktop
    width: 98%;
    overflow-x: hidden;
}

//section padding and spacing 
.section {
    padding: clamp(0.8rem, calc(0.52rem + 1.222vw), 1.4rem) clamp(0.8rem, calc(0.52rem + 1.222vw), 1.4rem); // top and bottom padding for sections on mobile and desktop
}

// How Flex will be used throughout the site
.flex {
    display: flex;
}

// items will be added dead center
.flex-center {
    display: flex;
    align-items: center; // any item with this class will be centered vertically
    justify-content: center; // any item with this class will be centered horizontally
  }
  
  .flex-column {
    display: flex;
    flex-direction: column; // any item with this class will be stacked vertically
  }
  
  .flex-between {
    display: flex;
    justify-content: space-between; // any item with this class will be spaced out evenly to opposite ends
    align-items: center; // any item with this class will be centered vertically
  }

  // Grid will be used to display the assigned images  classes have been added to the grid to make it responsive
  .grid {
    display: grid;
    gap: clamp(0.75rem, 1vw, 1.5rem); // responsive gap
  }

  .grid-auto {
    display: grid;
    gap: clamp(0.75rem, 1vw, 1.5rem);
    grid-template-columns: repeat(auto-fit, minmax(clamp(220px, 30vw, 350px), 1fr)); //trying this to see if it will make the grid responsive
  }

  //margin spacing utilities using clamps to cut down on amount of code

  .mt { margin-top: clamp(1rem, 2vw, 2rem); }
.mb { margin-bottom: clamp(1rem, 2vw, 2rem); }

    







